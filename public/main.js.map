{"version":3,"sources":["./src/app/components/pic-slide/pic-slide.component.scss","./src/app/components/generator/generator.component.ts","./src/app/components/generator/generator.component.css","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/profile/profile.component.ts","./src/app/components/register/register.component.html","./src/app/components/pic-slide/pic-slide.component.ts","./src/app/components/footer/footer.component.ts","./src/app/components/navbar/navbar.component.scss","./src/app/components/login/login.component.html","./src/app/components/profile/profile.component.scss","./src/app/components/navbar/navbar.component.html","./src/app/app.component.ts","./src/app/components/customer-num/customer-num.component.html","./src/app/components/generator/generator.component.html","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/register/register.component.ts","./src/app/components/login/login.component.scss","./src/app/components/customer-num/customer-num.component.ts","./src/app/app.module.ts","./src/app/services/customers_num.service.ts","./src/app/components/register/register.component.scss","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/pic-slide/pic-slide.component.html","./src/app/services/auth.service.ts","./src/app/components/customer-num/customer-num.component.scss","./src/app/components/profile/profile.component.html","./src/app/components/home/home.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/components/home/home.component.scss","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;;;;;;;;;;;ACA1I;AACQ;IAO7C,kBAAkB,SAAlB,kBAAkB;IAM7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ5C,SAAI,GAAG,MAAM,CAAC;QAEd,gBAAW,GAAG,IAAI,CAAC;IAE4B,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CACrC,CAAC,OAAO,EAAE,EAAE;YACV,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAEzB,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACxB,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;YACrE,MAAM,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC;YAE5C,WAAW,CAAC,GAAG,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CACrC,CAAC,OAAO,EAAE,EAAE;YACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CACF,CAAC;IACJ,CAAC;CACF;;YAnDQ,kEAAW;;AAOP,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;;KAE1C,CAAC;GACW,kBAAkB,CA4C9B;AA5C8B;;;;;;;;;;;;;ACR/B;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;ACAxL;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfpB;AACQ;AACkB;AACnC;AACV;IAOlB,aAAa,SAAb,aAAa;IAMxB,YACU,WAAwB,EACxB,gBAAoC,EACpC,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAoB;QACpC,WAAM,GAAN,MAAM,CAAQ;QALxB,sBAAiB,GAAW,CAAC,CAAC;IAM3B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;YAClD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;YACvC,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,WAAW;YAClB,IAAI,EAAE,SAAS;YACf,iBAAiB,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACf,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;CACF;;YAjDQ,kEAAW;YACX,yFAAkB;YAClB,sDAAM;;AAQF,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iFAAoC;;KAErC,CAAC;GACW,aAAa,CAuCzB;AAvCyB;;;;;;;;;;;;;;;;;;;;;;;ACXwB;AACQ;IAO7C,gBAAgB,SAAhB,gBAAgB;IAM3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CACrC,CAAC,OAAO,EAAE,EAAE;YACV,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;YAChC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CACF,CAAC;IACJ,CAAC;CACF;;YA7BQ,kEAAW;;AAOP,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oFAAuC;;KAExC,CAAC;GACW,gBAAgB,CAsB5B;AAtB4B;;;;;;;;;;;;;ACR7B;AAAe,gzCAAivC,E;;;;;;;;;;;;;;;;;;;;;ACAttC;IAO7B,iBAAiB,SAAjB,iBAAiB;;QAC5B,eAAU,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IACzD,CAAC;CAAA;AAFY,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAE7B;AAF6B;;;;;;;;;;;;;;;;;;;;ACPY;IAO7B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mFAAsC;KAEvC,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;ACP5B;AAAe,gFAAiB,iBAAiB,GAAG,6CAA6C,2RAA2R,E;;;;;;;;;;;;ACA5X;AAAe,woBAAykB,E;;;;;;;;;;;;ACAxlB;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;ACAxL;AAAe,mgEAAo8D,E;;;;;;;;;;;;;;;;;;;;;ACAz6D;IAO7B,YAAY,SAAZ,YAAY;;QACvB,UAAK,GAAG,OAAO,CAAC;IAClB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;ACPzB;AAAe,kYAAmU,8EAA8E,eAAe,+FAA+F,iBAAiB,+FAA+F,8CAA8C,4DAA4D,E;;;;;;;;;;;;ACAxuB;AAAe,oQAAqM,aAAa,4DAA4D,cAAc,oDAAoD,cAAc,sEAAsE,uCAAuC,wWAAwW,E;;;;;;;;;;;;ACAl0B;AAAe,8VAA+R,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA5P;AACQ;AACjB;AACV;IAMlB,cAAc,SAAd,cAAc;IAIzB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,QAAQ,KAAU,CAAC;IAEnB,aAAa;QACX,MAAM,KAAK,GAAG;YACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC1D,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtD,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,UAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;iBAAM;gBACL,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,UAAU;oBACjB,IAAI,EAAE,IAAI,CAAC,GAAG;oBACd,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA1CQ,kEAAW;YACX,sDAAM;;AAOF,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kFAAqC;;KAEtC,CAAC;GACW,cAAc,CAkC1B;AAlC0B;;;;;;;;;;;;;ACT3B;AAAe,wNAAyJ,2GAA2G,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjO;AACgB;AACR;AACjB;AACV;IAMlB,iBAAiB,SAAjB,iBAAiB;IAS5B,YACU,eAAgC,EAChC,WAAwB,EACxB,MAAc;QAFd,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,gBAAgB;QACd,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE;YACrC,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,sBAAsB;gBAC5B,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,IAAI;aACxB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QAED,MAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;YAChD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,IAAI;aACxB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACnD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,mBAAmB;gBACzB,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,IAAI;aACxB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACrD,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,IAAI,CAAC,GAAG;oBACd,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,IAAI,CAAC,GAAG;oBACd,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YArFQ,0EAAe;YACf,kEAAW;YACX,sDAAM;;AAOF,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;;KAEzC,CAAC;GACW,iBAAiB,CA4E7B;AA5E6B;;;;;;;;;;;;;ACV9B;AAAe,6GAA8C,uHAAuH,E;;;;;;;;;;;;;;;;;;;;;;ACAlI;AAEwB;IAO7D,oBAAoB,SAApB,oBAAoB;IAK/B,YACU,gBAAoC;QAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;QAL9C,cAAS,GAAc,EAAE,CAAC;QAC1B,sBAAiB,GAAW,CAAC,CAAC;IAK3B,CAAC;IAEJ,QAAQ;QACN,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;YACvC,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;CACF;;YAxBQ,kFAAkB;;AAOd,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAiBhC;AAjBgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTQ;AACiB;AACQ;AACV;AACI;AACN;AACP;AACG;AACS;AACA;AACJ;AACwB;AAClC;AAGW;AACT;AACwB;AACH;AACS;AACZ;AACe;AACQ;AACf;AACM;AACR;AAET;AACR;AAEtD,MAAM,UAAU,GAAqB;IACnC,UAAU,EAAE,KAAK;CAClB,CAAC;IAuCW,SAAS,SAAT,SAAS;CAAG;AAAZ,SAAS;IAtCrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,4DAAY;YACZ,oFAAe;YACf,iFAAc;YACd,0FAAiB;YACjB,8EAAa;YACb,6FAAkB;YAClB,qGAAoB;YACpB,uFAAgB;YAChB,4FAAiB;YACjB,oFAAe;SAChB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,0DAAW;YACX,qEAAgB;YAChB,qEAAgB;YAChB,yEAAe;YACf,mEAAa;YACb,kEAAmB;YACnB,qEAAa;YACb,yEAAe;YACf,wEAAe;YACf,6FAAuB;YACvB,4DAAS,CAAC,OAAO,CAAC;gBAChB,MAAM,EAAE;oBACN,WAAW,EAAE,GAAG,EAAE;wBAChB,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;oBAC1C,CAAC;iBACF;aACF,CAAC;YACF,sDAAa,CAAC,OAAO,CAAC,UAAU,CAAC;YACjC,2DAAS;SACV;QACD,SAAS,EAAE,CAAC,2EAAe,EAAE,mEAAW,CAAC;QACzC,SAAS,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;ACvEqB;AACoB;AAG/D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC;AAEF,OAAO;IAIM,kBAAkB,SAAlB,kBAAkB;IAW7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAW,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;IAEjB,CAAC;IAVxC,YAAY,CAAC,EAAE;QACb,oBAAoB;QACpB,wCAAwC;QAExC,yBAAyB;QACzB,OAAO,EAAE,CAAC;IACZ,CAAC;IAMD,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;CACF;;YA7BQ,+DAAU;;AAaN,kBAAkB;IAH9B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAgB9B;AAhB8B;;;;;;;;;;;;;ACd/B;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;;;;;;ACA7I;IAK9B,eAAe,SAAf,eAAe;IAC1B,gBAAe,CAAC;IAEhB,gBAAgB,CAAC,IAAI;QACnB,IACE,IAAI,CAAC,IAAI,IAAI,EAAE;YACf,IAAI,CAAC,IAAI,IAAI,SAAS;YACtB,IAAI,CAAC,KAAK,IAAI,SAAS;YACvB,IAAI,CAAC,QAAQ,IAAI,SAAS;YAC1B,IAAI,CAAC,QAAQ,IAAI,SAAS;YAC1B,IAAI,CAAC,KAAK,IAAI,SAAS,EACvB;YACA,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,gBAAgB,CAAC,YAAY;QAC3B,IACE,YAAY,CAAC,IAAI,IAAI,EAAE;YACvB,YAAY,CAAC,IAAI,IAAI,SAAS;YAC9B,YAAY,CAAC,KAAK,IAAI,SAAS;YAC/B,YAAY,CAAC,QAAQ,IAAI,SAAS;YAClC,YAAY,CAAC,QAAQ,IAAI,SAAS;YAClC,YAAY,CAAC,UAAU,IAAI,SAAS;YACpC,YAAY,CAAC,KAAK,IAAI,SAAS,EAC/B;YACA,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,EAAE,GACJ,2JAA2J,CAAC;QAC9J,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY,CAAC,UAAU;QACrB,MAAM,SAAS,GAAG,UAAU,CAAC;QAC7B,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC;QAC5B,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;YAC3D,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;CACF;;AAjDY,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAiD3B;AAjD2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACLsB;AACQ;AACjB;AACV;IAOlB,eAAe,SAAf,eAAe;IAC1B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,QAAQ,KAAU,CAAC;IAEnB,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,WAAW;YAClB,IAAI,EAAE,SAAS;YACf,iBAAiB,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,OAAO,KAAK,CAAC;IACf,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;CACF;;YA3BQ,kEAAW;YACX,sDAAM;;AAQF,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mFAAsC;;KAEvC,CAAC;GACW,eAAe,CAkB3B;AAlB2B;;;;;;;;;;;;;ACV5B;AAAe,8hCAA+9B,E;;;;;;;;;;;;;;;;;;;ACAn8B;AACoB;AAGT;AAEtD,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC;IAKW,WAAW,SAAX,WAAW;IAItB,YAAoB,IAAgB,EAAS,SAA2B;QAApD,SAAI,GAAJ,IAAI,CAAY;QAAS,cAAS,GAAT,SAAS,CAAkB;IAAG,CAAC;IAE5E,YAAY,CAAC,EAAE;QACb,oBAAoB;QACpB,wCAAwC;QAExC,yBAAyB;QACzB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,YAAY,CAAC,IAAI;QACf,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;IAED,aAAa,CAAC,KAAK,EAAE,QAAQ;QAC3B,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAClD,MAAM,YAAY,GAAG;YACnB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,aAAa,EAAE,SAAS,GAAG,IAAI,CAAC,SAAS;aAC1C,CAAC;SACH,CAAC;QAEF,sCAAsC;QACtC,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;CACF;;YApEQ,+DAAU;YAGV,mEAAgB;;AAWZ,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAsDvB;AAtDuB;;;;;;;;;;;;;ACfxB;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;ACAhM;AAAe,8HAA+D,QAAQ,qGAAqG,YAAY,iDAAiD,SAAS,gDAAgD,SAAS,yBAAyB,E;;;;;;;;;;;;ACAnV;AAAe,qGAAsC,oBAAoB,KAAK,uEAAuE,wTAAwT,yGAAyG,uNAAuN,0BAA0B,kCAAkC,0BAA0B,wBAAwB,kCAAkC,2CAA2C,oJAAoJ,0BAA0B,8BAA8B,yBAAyB,oBAAoB,2CAA2C,2EAA2E,QAAQ,0FAA0F,qBAAqB,oEAAoE,yBAAyB,uFAAuF,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzjD;AACc;AAEU;AACM;AACH;AACS;AACG;AACN;AACc;AACT;AAE/E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAa,EAAE;IACtC,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,4FAAkB,EAAE;IAChD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,oGAAoB,EAAE;IACxD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,4FAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,6EAAa,EAAE;CACzC,CAAC;IAMW,gBAAgB,SAAhB,gBAAgB;CAAG;AAAnB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1D,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;AC5B7B;AAAe,sEAAO,iBAAiB,GAAG,UAAU,cAAc,wCAAwC,qBAAqB,kBAAkB,2BAA2B,qBAAqB,GAAG,YAAY,qBAAqB,GAAG,6CAA6C,urBAAurB,E;;;;;;;;;;;;ACA58B;AAAe,6GAA8C,uHAAuH,E;;;;;;;;;;;;ACApL;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwaWMtc2xpZGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-generator',\n  templateUrl: './generator.component.html',\n  styleUrls: ['./generator.component.css'],\n})\nexport class GeneratorComponent implements OnInit {\n  Suser: string;\n  user = Object;\n  kr_curr: any;\n  createdCode = null;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(\n      (profile) => {\n        this.user = profile.user;\n\n        const curr = new Date();\n        const utc = profile.user.time + curr.getTimezoneOffset() * 60 * 1000;\n        const KR_TIME_DIFF = 9 * 60 * 60 * 1000;\n        this.kr_curr = new Date(utc + KR_TIME_DIFF);\n\n        setInterval(() => {\n          this.kr_curr = new Date();\n        }, 1000);\n\n        this.Suser = JSON.stringify(profile.user);\n        this.createdCode = this.Suser;\n      },\n      (err) => {\n        console.log(err);\n        return false;\n      }\n    );\n  }\n\n  onRefresh() {\n    this.authService.getProfile().subscribe(\n      (profile) => {\n        this.Suser = JSON.stringify(profile.user);\n        this.createdCode = this.Suser;\n      },\n      (err) => {\n        console.log(err);\n        return false;\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnZW5lcmF0b3IuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { CustomerNumService } from 'src/app/services/customers_num.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  name: string;\n  username: string;\n  email: string;\n  customersQuantity: number = 0;\n\n  constructor(\n    private authService: AuthService,\n    private customer1Service: CustomerNumService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile) => {\n      this.name = profile.user.name;\n      this.username = profile.user.username;\n      this.email = profile.user.email;\n    });\n\n    setInterval(() => {\n      this.customer1Service.getCustomerNums().subscribe((data) => {\n        this.customersQuantity = data.length;\n      });\n    }, 1000);\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    Swal.fire({\n      title: '로그아웃 성공! ',\n      icon: 'success',\n      confirmButtonText: '확인',\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n  checkLoggedIn() {\n    return this.authService.loggedIn();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  name: string;\n  username: string;\n  email: string;\n  birth: string;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(\n      (profile) => {\n        this.name = profile.user.name;\n        this.username = profile.user.username;\n        this.email = profile.user.email;\n        this.birth = profile.user.birth;\n      },\n      (err) => {\n        console.log(err);\n        return false;\n      }\n    );\n  }\n}\n","export default \"<br />\\n<h2 class=\\\"page-header\\\">Qyaho 회원가입</h2>\\n<br />\\n<form (ngSubmit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"from-gruop\\\">\\n    <label> * 이름 </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <div class=\\\"form-gruop\\\">\\n    <label> * 이메일 </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <div class=\\\"form-gruop\\\">\\n    <label> * 생년월일 </label>\\n    <input type=\\\"date\\\" [(ngModel)]=\\\"birth\\\" name=\\\"birth\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <div class=\\\"form-gruop\\\">\\n    <label> * ID </label>\\n    <input\\n      type=\\\"text\\\"\\n      [(ngModel)]=\\\"username\\\"\\n      name=\\\"username\\\"\\n      class=\\\"form-control\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> * 비밀번호 </label>\\n    <input\\n      type=\\\"password\\\"\\n      [(ngModel)]=\\\"password1\\\"\\n      name=\\\"password1\\\"\\n      class=\\\"form-control\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> * 비밀번호 확인 </label>\\n    <input\\n      type=\\\"password\\\"\\n      [(ngModel)]=\\\"password2\\\"\\n      name=\\\"password2\\\"\\n      class=\\\"form-control\\\"\\n    />\\n  </div>\\n  <br />\\n  <input type=\\\"submit\\\" class=\\\"btn btn-warning\\\" value=\\\"회원가입\\\" />\\n</form>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pic-slide',\n  templateUrl: './pic-slide.component.html',\n  styleUrls: ['./pic-slide.component.scss'],\n})\nexport class PicSlideComponent {\n  homeSlider = { items: 1, dots: true, navigator: true };\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: [],\n})\nexport class FooterComponent {}\n","export default \".navbar-logo i {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxuYXZiYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FBQ0YiLCJmaWxlIjoibmF2YmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmJhci1sb2dvIGkge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufSJdfQ== */\";","export default \"<br />\\n<h2 class=\\\"page-header\\\">Qyaho 로그인</h2>\\n<br />\\n<form (ngSubmit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>ID</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control\\\"\\n      name=\\\"username\\\"\\n      [(ngModel)]=\\\"username\\\"\\n    />\\n  </div>\\n  <br />\\n  <div class=\\\"form-group\\\">\\n    <label>비밀번호</label>\\n    <input\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      name=\\\"password\\\"\\n      [(ngModel)]=\\\"password\\\"\\n    />\\n  </div>\\n  <br />\\n  <input type=\\\"submit\\\" class=\\\"btn btn-warning\\\" value=\\\"로그인\\\" />\\n</form>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<link\\n  rel=\\\"stylesheet\\\"\\n  href=\\\"https://use.fontawesome.com/releases/v5.15.4/css/all.css\\\"\\n  integrity=\\\"sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm\\\"\\n  crossorigin=\\\"anonymous\\\"\\n/>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-warning\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-logo\\\">\\n      <i class=\\\"fab fa-centercode\\\"></i>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Qyaho 은행</a>\\n    </div>\\n    <button\\n      class=\\\"navbar-toggler\\\"\\n      type=\\\"button\\\"\\n      data-toggle=\\\"collapse\\\"\\n      data-target=\\\"#navbarSupportedContent\\\"\\n      aria-controls=\\\"navbarSupportedContent\\\"\\n      aria-expanded=\\\"false\\\"\\n      aria-label=\\\"Toggle navigation\\\"\\n    >\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li *ngIf=\\\"!checkLoggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">회원가입</a>\\n        </li>\\n\\n        <li *ngIf=\\\"!checkLoggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">로그인</a>\\n        </li>\\n\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/picslide\\\">대기 등록 메뉴얼</a>\\n          </li>\\n\\n          <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/qrgen\\\">대기 순번 QR코드</a>\\n          </li>\\n\\n          <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">프로필</a>\\n          </li>\\n        </ul>\\n        <ul class=\\\"navbar-nav mr-right\\\">\\n          <li *ngIf=\\\"checkLoggedIn()\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">로그아웃</a>\\n          </li>\\n        </ul>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'qyaho';\n}\n","export default \"<br />\\n  <table class=\\\"table table-bordered\\\">\\n    <thead class=\\\"thead\\\">\\n      <tr class=\\\"text-center bg-warning\\\">\\n        <th scope=\\\"col\\\">순번</th>\\n        <th scope=\\\"col\\\">이름</th>\\n        <th scope=\\\"col\\\">대기 등록 시간</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr *ngFor=\\\"let customer of customers;\\\">\\n        <td class=\\\"text-center\\\" style=\\\"width: 20%\\\">\\n          <h5>{{ customer.no }}</h5>\\n        </td>\\n        <td class=\\\"text-center\\\" style=\\\"width: 40%\\\">\\n          <h5>{{ customer.name }}</h5>\\n        </td>\\n        <td class=\\\"text-center\\\" style=\\\"width: 40%\\\">\\n          <h5>{{ customer.time | date: \\\"MM/dd hh:mm:ss a\\\" }}</h5>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\";","export default \"<div *ngIf=\\\"user\\\">\\n  <div id=\\\"container\\\">\\n    <div id=\\\"block\\\">\\n      <br />\\n      <h2 class=\\\"page-header\\\">대기 순번 QR코드</h2>\\n      <br />\\n      <ul class=\\\"list-group\\\">\\n        <h4>{{ user.name }}님의 QR코드</h4>\\n        <li class=\\\"list-group-item\\\">이메일 : {{ user.email }}</li>\\n        <li class=\\\"list-group-item\\\">생일 : {{ user.birth }}</li>\\n        <li class=\\\"list-group-item\\\">\\n          대기 등록 시간 : {{ this.kr_curr | date: \\\"hh:mm:ss a\\\" }}\\n        </li>\\n      </ul>\\n      <br />\\n      <div *ngIf=\\\"createdCode\\\" class=\\\"qrdata\\\" style=\\\"text-align: center\\\">\\n        <ngx-qrcode [value]=\\\"createdCode\\\"></ngx-qrcode>\\n      \\n      <br />\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"onRefresh()\\\">\\n        QR코드 재발급\\n      </button></div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<html>\\n  <header>\\n    <app-navbar></app-navbar>\\n  </header>\\n\\n  <body style=\\\"background-color: lightgoldenrodyellow\\\">\\n    <div class=\\\"container\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </body>\\n\\n  <footer>\\n    <app-footer></app-footer>\\n  </footer>\\n</html>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  onLoginSubmit() {\n    const login = {\n      username: this.username,\n      password: this.password,\n    };\n\n    this.authService.authenticateUser(login).subscribe((data) => {\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        Swal.fire({\n          title: '로그인 성공! ',\n          icon: 'success',\n          confirmButtonText: '확인',\n        });\n        this.router.navigate(['']);\n      } else {\n        Swal.fire({\n          title: '로그인 실패! ',\n          text: data.msg,\n          icon: 'error',\n          confirmButtonText: '확인',\n        });\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}\n","export default \"<footer class=\\\"py-10 bg-dark\\\">\\n  <div class=\\\"container\\\" style=\\\"text-align: center\\\">\\n    <p class=\\\"m-0 footer-text text-white\\\">Copyright &copy;2021 Qyaho</p>\\n    <p class=\\\"m-0 footer-text text-white\\\">Gradudation project</p>\\n  </div>\\n</footer>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  password1: string;\n  password2: string;\n  birth: number;\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onRegisterSubmit() {\n    if (this.password1 !== this.password2) {\n      Swal.fire({\n        title: '회원가입 실패! ',\n        text: '패스워드가 다릅니다. 다시 입력하세요',\n        icon: 'error',\n        confirmButtonText: '확인',\n      });\n      return false;\n    }\n\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password1,\n      birth: this.birth,\n    };\n\n    if (!this.validateService.validateRegister(user)) {\n      Swal.fire({\n        title: '회원가입 실패! ',\n        text: '모두 입력해 주세요',\n        icon: 'error',\n        confirmButtonText: '확인',\n      });\n      return false;\n    }\n\n    if (!this.validateService.validateEmail(user.email)) {\n      Swal.fire({\n        title: '회원가입 실패! ',\n        text: '이메일 주소가 올바르지 않습니다',\n        icon: 'error',\n        confirmButtonText: '확인',\n      });\n      return false;\n    }\n\n    this.authService.registerUser(user).subscribe((data) => {\n      if (data.success) {\n        Swal.fire({\n          title: '회원가입 성공! ',\n          icon: 'success',\n          text: data.msg,\n          confirmButtonText: '확인',\n        });\n        this.router.navigate(['/login']);\n      } else {\n        Swal.fire({\n          title: '회원가입 실패! ',\n          text: data.msg,\n          icon: 'error',\n          confirmButtonText: '확인',\n        });\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Cus_num } from '../../models/cus.num';\nimport { CustomerNumService } from '../../services/customers_num.service';\n\n@Component({\n  selector: 'app-customer-num',\n  templateUrl: './customer-num.component.html',\n  styleUrls: ['./customer-num.component.scss'],\n})\nexport class CustomerNumComponent implements OnInit {\n  customers: Cus_num[] = [];\n  customersQuantity: number = 0;\n  name: string;\n\n  constructor(\n    private customer1Service: CustomerNumService\n  ) {}\n\n  ngOnInit() {\n    setInterval(() => {\n      this.customer1Service.getCustomerNums().subscribe((data) => {\n        this.customers = data;\n        this.customersQuantity = data.length;\n      });\n    }, 1000);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OwlModule } from 'ngx-owl-carousel';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { GeneratorComponent } from './components/generator/generator.component';\nimport { CustomerNumComponent } from './components/customer-num/customer-num.component';\nimport { ProfileComponent } from './components/profile/profile.component'\nimport { PicSlideComponent } from './components/pic-slide/pic-slide.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\n\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    GeneratorComponent,\n    CustomerNumComponent,\n    ProfileComponent,\n    PicSlideComponent,\n    FooterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxQRCodeModule,\n    TooltipModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return localStorage.getItem('id_token');\n        },\n      },\n    }),\n    NgxMaskModule.forRoot(maskConfig),\n    OwlModule,\n  ],\n  providers: [ValidateService, AuthService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Cus_num } from '../models/cus.num';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\n//대기 순번\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerNumService {\n  prepEndpoint(ep) {\n    // 1. localhost에 포팅시\n    // return 'http://localhost:3000/' + ep;\n\n    // 2. Heroku 클라우드 서버에 포팅시\n    return ep;\n  }\n\n  API_URL: string = this.prepEndpoint('cusnum/cus_nums/');\n\n  constructor(private http: HttpClient) {}\n\n  getCustomerNums() {\n    return this.http.get<Cus_num[]>(this.API_URL, httpOptions);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidateService {\n  constructor() {}\n\n  validateRegister(user) {\n    if (\n      user.name == '' ||\n      user.name == undefined ||\n      user.email == undefined ||\n      user.username == undefined ||\n      user.password == undefined ||\n      user.birth == undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validatebusiness(businessuser) {\n    if (\n      businessuser.name == '' ||\n      businessuser.name == undefined ||\n      businessuser.email == undefined ||\n      businessuser.username == undefined ||\n      businessuser.password == undefined ||\n      businessuser.licenseNum == undefined ||\n      businessuser.birth == undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    var re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  licensecheck(licenseNum) {\n    const stlicense = licenseNum;\n    const sl = stlicense.length;\n    if (licenseNum <= 9999999999 && licenseNum >= 0 && sl == 10) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  onLogoutClick() {\n    this.authService.logout();\n    Swal.fire({\n      title: '로그아웃 성공! ',\n      icon: 'success',\n      confirmButtonText: '확인',\n    });\n    this.router.navigate(['']);\n    return false;\n  }\n  checkLoggedIn() {\n    return this.authService.loggedIn();\n  }\n}\n","export default \"<br />\\n<div class=\\\"container\\\" style=\\\"text-align: center\\\">\\n  <owl-carousel [options]=\\\"homeSlider\\\" [carouselClasses]=\\\"['owl-theme']\\\">\\n    <div class=\\\"item\\\">\\n      <br />\\n      <h1>1. QR코드 생성</h1>\\n      <h1>대기 순번 QR코드 페이지로 이동하거나 QR코드 재발급 버튼 클릭</h1>\\n      <br />\\n      <img src=\\\"../../../assets/images/example.png\\\" />\\n    </div>\\n    <div class=\\\"item\\\">\\n      <br />\\n      <h1>2. 대기 등록 시</h1>\\n      <h1>생성된 QR코드를 비치된 대기 등록 스캐너를 통해 스캔</h1>\\n      <br />\\n      <img src=\\\"../../../assets/images/example1.png\\\" />\\n    </div>\\n    <div class=\\\"item\\\">\\n      <br />\\n      <h1>3. 대기 등록 후 등록 취소를 원할 시</h1>\\n      <h1>다시 QR코드를 생성하여 대기 등록 스캐너에 스캔</h1>\\n      <br />\\n      <img src=\\\"../../../assets/images/example2.png\\\" />\\n    </div>\\n    <div class=\\\"item\\\">\\n      <br />\\n      <h1>4. 대기 순번 차례 시</h1>\\n      <h1>QR코드를 생성하여 대기 서비스 제공 스캐너에 스캔</h1>\\n      <br />\\n      <img src=\\\"../../../assets/images/example3.png\\\" />\\n    </div>\\n  </owl-carousel>\\n</div>\\n<br />\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Login, UserNoPW } from '../models/User';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  userNoPW: UserNoPW;\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) {}\n\n  prepEndpoint(ep) {\n    // 1. localhost에 포팅시\n    // return 'http://localhost:3000/' + ep;\n\n    // 2. Heroku 클라우드 서버에 포팅시\n    return ep;\n  }\n\n  registerUser(user): Observable<any> {\n    const registerUrl = this.prepEndpoint('users/register');\n    return this.http.post(registerUrl, user, httpOptions);\n  }\n\n  authenticateUser(login): Observable<any> {\n    const loginUrl = this.prepEndpoint('users/authenticate');\n    return this.http.post<Login>(loginUrl, login, httpOptions);\n  }\n\n  storeUserData(token, userNoPW) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(userNoPW));\n    this.authToken = token;\n    this.userNoPW = userNoPW;\n  }\n\n  getProfile(): Observable<any> {\n    this.authToken = localStorage.getItem('id_token');\n    const httpOptions1 = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.authToken,\n      }),\n    };\n\n    // const profileUrl = 'users/profile';\n    const profileUrl = this.prepEndpoint('users/profile');\n    return this.http.get(profileUrl, httpOptions1);\n  }\n\n  logout() {\n    this.authToken = null;\n    this.userNoPW = null;\n    localStorage.clear();\n  }\n\n  loggedIn() {\n    return !this.jwtHelper.isTokenExpired(this.authToken);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjdXN0b21lci1udW0uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<div *ngIf=\\\"name\\\">\\n  <br />\\n  <h2 class=\\\"page-header\\\">{{ name }}님의 현재 프로필입니다.</h2>\\n  <br />\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">아이디 : {{ username }}</li>\\n    <li class=\\\"list-group-item\\\">이메일 : {{ email }}</li>\\n    <li class=\\\"list-group-item\\\">생일 : {{ birth }}</li>\\n  </ul>\\n</div>\\n\";","export default \"<style type=\\\"text/css\\\">\\n  .blank {\\n    height: 150px;\\n  }\\n</style>\\n<div *ngIf=\\\"!checkLoggedIn()\\\" style=\\\"text-align: center; vertical-align: top\\\">\\n  <div style=\\\"padding-top: 40px\\\">\\n    <h1>아직 계정이 없으신가요?</h1>\\n    <h4>계정이 있으시면 로그인하세요!</h4>\\n    <br />\\n    <button\\n      *ngIf=\\\"!checkLoggedIn()\\\"\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-warning\\\"\\n      routerLink=\\\"/register\\\"\\n    >\\n      회원가입\\n    </button>\\n    &nbsp;\\n    <button\\n      *ngIf=\\\"!checkLoggedIn()\\\"\\n      type=\\\"button\\\"\\n      style=\\\"text-align: center; vertical-align: top\\\"\\n      class=\\\"btn btn-warning\\\"\\n      routerLink=\\\"/login\\\"\\n    >\\n      로그인\\n    </button>\\n  </div>\\n</div>\\n<br />\\n<div\\n  *ngIf=\\\"checkLoggedIn()\\\"\\n  style=\\\"\\n    text-align: center;\\n    vertical-align: top;\\n    border: 1px solid peachpuff;\\n    border-radius: 60px;\\n    padding-top: 10px;\\n    background-color: peachpuff;\\n  \\\"\\n>\\n  <h1 style=\\\"padding-top: 10px; padding-bottom: 10px\\\">\\n    어서오세요! Qyaho 은행입니다.\\n  </h1>\\n</div>\\n<br />\\n\\n<div\\n  *ngIf=\\\"checkLoggedIn()\\\"\\n  style=\\\"\\n    text-align: center;\\n    vertical-align: top;\\n    border: 1px solid black;\\n    border-radius: 5px;\\n    padding: 10px;\\n    background-color: rgb(255, 255, 227);\\n  \\\"\\n>\\n  <div *ngIf=\\\"name\\\">\\n    <h2 class=\\\"page-header\\\">\\n      {{ name }}님 환영합니다! 현재 대기 상황은 다음과 같습니다.\\n    </h2>\\n    <h2 class=\\\"waitpeople\\\">\\n      현재 대기자 수는 {{ customersQuantity }}명 입니다.\\n    </h2>\\n    <h2 class=\\\"waitpeople\\\">\\n      예상 대기 시간은 {{ customersQuantity * 5 }}분 입니다.\\n    </h2>\\n    <app-customer-num></app-customer-num>\\n  </div>\\n</div>\\n<br />\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { GeneratorComponent } from './components/generator/generator.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { CustomerNumComponent } from './components/customer-num/customer-num.component';\nimport { PicSlideComponent } from './components/pic-slide/pic-slide.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'navbar', component: NavbarComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'qrgen', component: GeneratorComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'customerNum', component: CustomerNumComponent },\n  { path: 'picslide', component: PicSlideComponent },\n  { path: '**', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export default \"html {\\n  height: 100%;\\n}\\n\\nbody {\\n  margin: 0;\\n  font-family: basic-sans, sans-serif;\\n  line-height: 1.6;\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100%;\\n}\\n\\nfooter {\\n  margin-top: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKOztBQUVBO0VBQ0ksU0FBQTtFQUNBLG1DQUFBO0VBQ0EsZ0JBQUE7RUFFQSxhQUFBO0VBQ0Esc0JBQUE7RUFFQSxnQkFBQTtBQURKOztBQUlBO0VBQ0ksZ0JBQUE7QUFESiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJodG1se1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5ib2R5e1xyXG4gICAgbWFyZ2luOjA7XHJcbiAgICBmb250LWZhbWlseTogYmFzaWMtc2Fucywgc2Fucy1zZXJpZjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjY7XHJcblxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgbWluLWhlaWdodDogMTAwJTtcclxufVxyXG5cclxuZm9vdGVye1xyXG4gICAgbWFyZ2luLXRvcDogYXV0bztcclxufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5zY3NzIn0= */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}